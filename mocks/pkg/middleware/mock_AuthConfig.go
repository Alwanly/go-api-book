// Code generated by mockery v2.44.1. DO NOT EDIT.

package middleware

import (
	middleware "github.com/Alwanly/go-codebase/pkg/middleware"
	mock "github.com/stretchr/testify/mock"
)

// MockAuthConfig is an autogenerated mock type for the AuthConfig type
type MockAuthConfig struct {
	mock.Mock
}

type MockAuthConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuthConfig) EXPECT() *MockAuthConfig_Expecter {
	return &MockAuthConfig_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockAuthConfig) Execute(_a0 *middleware.AuthOpts) {
	_m.Called(_a0)
}

// MockAuthConfig_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockAuthConfig_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *middleware.AuthOpts
func (_e *MockAuthConfig_Expecter) Execute(_a0 interface{}) *MockAuthConfig_Execute_Call {
	return &MockAuthConfig_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockAuthConfig_Execute_Call) Run(run func(_a0 *middleware.AuthOpts)) *MockAuthConfig_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*middleware.AuthOpts))
	})
	return _c
}

func (_c *MockAuthConfig_Execute_Call) Return() *MockAuthConfig_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAuthConfig_Execute_Call) RunAndReturn(run func(*middleware.AuthOpts)) *MockAuthConfig_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAuthConfig creates a new instance of MockAuthConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAuthConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAuthConfig {
	mock := &MockAuthConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
